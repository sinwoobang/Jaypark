dist: xenial
sudo: required
language: python
cache: pip
python:
- '3.7'
jdk:
- oraclejdk8
before_install:
- npm install -g bower
- bower install
- wget -O - https://debian.neo4j.org/neotechnology.gpg.key | sudo apt-key add -
- echo 'deb https://debian.neo4j.org/repo stable/' | sudo tee -a /etc/apt/sources.list.d/neo4j.list
- sudo apt-get update
- sudo apt-get install neo4j=1:3.5.3
- sudo systemctl enable neo4j
- sudo systemctl start neo4j
- sleep 5
- sudo neo4j-admin set-initial-password neo4j
- sleep 2
- cypher-shell -u neo4j -p neo4j --non-interactive "CALL dbms.security.changePassword('neo4jfirstlogin')"
- sleep 2
- >
  cypher-shell -u neo4j -p neo4jfirstlogin --non-interactive "CALL dbms.security.createUser(\"${TEST_GRAPH_USERNAME}\", \"${TEST_GRAPH_PASSWORD}\", false)"
- sleep 2
- sudo apt-get install python3-dev gcc  # to make Coverage Computing fast by using C Extension
- bash ./etc/ci_aws_credentials.sh
install:
- pip install -r requirements/dev.txt
before_script:
- python manage.py collectstatic
script:
- coverage run --source='.' manage.py test  # to test codes
- coverage report  # to measure Test Coverage
env:
  global:
  - secure: FzP/C6c5qaswjJqzPpAacGfN42BhW72y4L9sNHZWWgy193OWm9PCOFfxbWzrqV/nEuIg28FVoiWTUtSqgZ4luY6DasWh1WQa2ZGEJcUn1Kd+nNswA3LPcIFWxx27tEkOn8jo/na4Xa7UmqzUi8HWp9n3d7fFpCjfnDWGgH4neLIpkyjUb0d8TG2OA5THffARqRzHU6jqLbnFCLv4wGn2OLRm4BRc7AuR1eW35rQhOYvdVEBORpMRatpYyTfYJKMmkstc+SJe/8OcxMttLVH1CS0FyWiP7Dfkpu+lFbmmxUgVMSnmvH4cDAYClwXjdPR56cuH19+5XsIP9bYDDNhhLWVEDZbdTH12RXSr59OVf/fYhOlqkGnMi7u0gV8tCQQpGVDpRVvK15VlzaaGvNYR+AifdWpdIvzc/vb6njS5qvIjs/pYzGAaWbAv8/8+2NT+Cf2Bi84EWjLFFcOIj7pFd4XINRJtvfruW9BKqjZkIEpnk+n612ezgAjFdedRxhxFwnPOTkRCRxxYYV3/6zgE4+KVO/2afxbLTzph5TM5OEfmoJYHcBb9cCoONkXAEStG04nSrV38KzhIdrRgg/doQdXwPAcF+sIq6RytYFT3etcyCIaSNcDGd/XVQq28Jq5iZBu0KUOiFr00x93+9Ku+A5d/d8wtpaPJubSgiv/FiNI=
  - secure: Dy72bgIWVRoie5Omj+/K5+lJkWXYqrGv6B6SG48SCgIirOGjNnMkHa2nTn9M2ZEBSq4e4RBX8RHdqq/t3RoETDnGrLUe4lJ5ls2POkhbuHNKPGQ2Qyx7kGjlcO2bfSanlBGVoxwGTWjl+zjeIW/ZXIpev3T9mVZfHi3zuZeOBDiS5PIOxpEpKY6S9kpHMx+gHVYzUggmrwwVZj3yOA1nqMl7TqZ5gc82i7WnZMrqdcfLwzKLCZoveYbWBkBTBqVb5mLP/LqVaajqL0cRp1nVcQyQvJJG+AHQ4jRGnbRQPyEbCuMPvnmC8NxM85ObyE3wEuDEnqUkess+DLiQwrwInRbanLvPbwYbpNh94KuJP3K4sG9Kw7wjLP5jh0EZBpCwmdQDjw3q8zcM6nSAGhhBHjcZY0EcM7vcUCVdUwr24sAaiM1plG3zEOEXJMFQx1HbpREv1MX7o4H77I71g/A+Cg5wckkJfcEdOX1xI3nHmk2JyJJRL9L/qHVYmPWi4S1dLtjxrQkdH2Hsi/u912jQ+/jCMOIROW9c6q7k+frxcICAxnRTmJIYfPNMeDwv/QJ8qoGu9s7pbnrl3uz5DtGMHZQhfHCGj16xwuz1GD2rDcJWqi9IkxY7MCJdnXTw4N7PCQIscX9MnXiBVhdgtvfqjx9m4I9nPhQ11M1NlGUc3tY=
  - secure: o8vYwFsAyF/kQ0M5iuKJ63TM21j7Fe5tbyyC4y2JyCKWWmfxHhdtrQpnisBfRpl96YjRQd1enRno03we38WgcFD17kK7NuJpyAVfSFi2ZTV6A044k/9MDdjJqBUPT0xtkBKF7WWLQveuND1Mq2t0t+2PMM3QO+dIQqFSoKbgFvQ9p+baZDLY/O+BNXW1nMrjiR7YhanF4bxlBn+JpAYQGYBD3fCI+SD9Qw5q/0kxgRb5zKXkLk2kX+qCxyya5C6M8qNf6f1612yCk2D+agPiDTsUX8EVM9FqwzP+LJomM8ayUZdbcZ+0P/EWraRN5ariCSwm3YhOokPEWZhRRCCZNlMSQhy/hrcMX0ZTGsyA19sCLwpT8Oeet/xCq558J5kKDQmLcQhuoeR19hXqDWkyj6u/ajER79bF6vSaj/ia5UlAu0lwNfC9xmTFfRVB8tR/C9j2hVCgbEUfHM+4QiFe/KlwGFehRdJya9Pm5skOm6S34YDxV/OkTzFzcZL2JaRpqW36Udxq2wkrI+C7xtGk2wQdKNAhWNFriZGnNo2KJ/9osfx1EErahTOkvutWoyIkc57trspfbZWG0Zzt935AlxuB+sbw3RJa+pxfCjUuNt+DcyVmYvkuSUlzm4g61l0Zz8Q9T6o5X4j973cuCGzyu3afMB+5Xlwv5kZkA92HwIw=
  - secure: Gsb+yoGnOEuIJUb3AJCGBAfxuLa2vLR2X0LQNQIcXRLM7JVhnHljz8Hj2qY9VMxXjzwbVlo4t3v5LD6YSdUlWnfot2cPP55fwFc8qA2f25OzVYgjokQrrOWaUJMDtVJchWg7Kw2DtFC9XS/7aRJcaJVCdqLaKF5VhU1h/TyzhERJtm3vGsa8LACPaj5djfdKPxez1RGqdheBSFSra1W5TPpPI38KWCc1Of+DsK4Yiw+p45kz1EFUw8scJ8Bg8ZnFu8M4abu98zDQcAjH/F0fXIPkbi5Jmp6wyaYpGhqYChycikg4ASKsnZC1JDSdFYUbkOpedqnfnTT7s9mpHxteRmtAZaQHv8mp9YJhsELJ2zcfmWd/40s0sUXryZp+w3E8ieemc2+DYRLMV2QtHAePvFWLOvV96zf7WRRqgYGiCwxATwMwsuo7rWhQMMZ8ibIZIVGLLXU1T9Q4CXDnT7pqgz5eTBBcWt6/0Qb0SgtrC56C+6zTE1qzCZRTEC2LzfK5zK8FKy7XRlj8Pb2vPQg9GxBluCPoIixkXndGqaU6CFrL/ppZ6TA+XctgBwSv1ot885Hu0CbxvN1eAKsdlBxR+c+dw1B3QAIxmsLm/s6gMPbxPn7SxBQofYsWAtZnwCybrda9ooCobR545s/GqUoOGFyWSvbK7dpHqwkjS/wd9Hw=
  - secure: JpjT3Irnlxa2Y6Tk0/rtZjO5UfzyMOVUF1ghyvTqJx/vj8/B8Gyi+O8F9EbfbCkgK2G8mYxcDkFc6MkFjWqYd8H6hCT+3uPQdaitHckjKKZD009X8eiV0bhnSTKerrJLj6z47NES6b134Hl3CPUrxweDeCaP+AWmkaB0f96wPrKLhRD464R/ZUFgRnMDmVc+WSQ+acqmfU/7vk2SXOT2UMSLYfcRxsQS+7v0QZVtkfluoGE/dnllmLFkfTddm081zhq3QCcbJyWMUP4KejKe8+1mS48ngcXcv/yikqaUmi6qzKiBZKVHooDDKUU+5Sjebq2zC8iUTiKw2sXP87IMPvvy/1LX2ySmY6K1OWi9IGnH6c0fOCazVhJFayII73T+wxQebfzlKHv0L/Pk9wu2K8QT0XIThLDNUQc8li6DTuM2TF5AgzFblahNDfaMT6Xg0r9nnvUH+by+/hJxj4NA9mLepEG0I74OAXzOt3hylvjCqumXY26OrOsQUWlOOJoGNu31HoGuvpPA7Auq/xVlshKeWh9dhASgoNuZmTp1DARfvSfORkQDOyZKJep/mX1WzQ7ZXlS5yNxeWHt/7G70fDiwAswfJ/ibzRFEr9QfYNRGm+CZl+zwpaA0Ql3BI1kZKOMFtu2nMeOnOr3UOiDoz+alTkbQ1vj1/Nb77Nj4jac=
